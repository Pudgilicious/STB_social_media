knitr::opts_knit$set(root.dir = "~/git/STB_social_media_analytics")
knitr::opts_chunk$set(root.dir = "~/git/STB_social_media_analytics", echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(textmineR)
# Aspects from TripA
tripa_aspects_path <- "./tripadvisor/aspects_output/"
tripa_aspects_csvs <- list.files(path = tripa_aspects_path, include.dirs = TRUE)[1:3]
tripa_aspects_df <- data.frame(matrix(nrow = 0, ncol = 3))
names(tripa_aspects_df) <- c("POI_INDEX", "ASPECTS", "ASPECTS_CRAWLED_TIME")
for (file_name in tripa_aspects_csvs) {
path <- paste0(tripa_aspects_path, file_name)
aspects_df <- read.csv(path, as.is = TRUE)
tripa_aspects_df <- rbind(tripa_aspects_df, aspects_df)
}
# Aspects from TripA
tripa_aspects_path <- "./tripadvisor/output/"
tripa_aspects_csvs <- list.files(path = tripa_aspects_path, include.dirs = TRUE)[1:3]
tripa_aspects_df <- data.frame(matrix(nrow = 0, ncol = 3))
names(tripa_aspects_df) <- c("POI_INDEX", "ASPECTS", "ASPECTS_CRAWLED_TIME")
for (file_name in tripa_aspects_csvs) {
path <- paste0(tripa_aspects_path, file_name)
aspects_df <- read.csv(path, as.is = TRUE)
tripa_aspects_df <- rbind(tripa_aspects_df, aspects_df)
}
# Aspects from TripA
tripa_aspects_path <- "./tripadvisor/output/"
tripa_aspects_csvs <- list.files(path = tripa_aspects_path, include.dirs = TRUE)[1:3]
tripa_aspects_df <- data.frame(matrix(nrow = 0, ncol = 3))
names(tripa_aspects_df) <- c("POI_INDEX", "ASPECTS", "ASPECTS_CRAWLED_TIME")
for (file_name in tripa_aspects_csvs) {
path <- paste0(tripa_aspects_path, file_name)
aspects_df <- read.csv(path, as.is = TRUE)
tripa_aspects_df <- rbind(tripa_aspects_df, aspects_df)
}
# Aspects from TripA
tripa_aspects_path <- "./tripadvisor/output/"
tripa_aspects_csvs <- list.files(path = tripa_aspects_path, include.dirs = TRUE)
tripa_aspects_df <- data.frame(matrix(nrow = 0, ncol = 3))
names(tripa_aspects_df) <- c("POI_INDEX", "ASPECTS", "ASPECTS_CRAWLED_TIME")
for (file_name in tripa_aspects_csvs) {
path <- paste0(tripa_aspects_path, file_name)
aspects_df <- read.csv(path, as.is = TRUE)
tripa_aspects_df <- rbind(tripa_aspects_df, aspects_df)
}
tripa_aspects_df = tripa_aspects_df[, c(1,2)]
tripa_aspects_df_parsed <- tripa_aspects_df[1, c(1,2)]
for (i in 1:758) {
if (i %in% tripa_aspects_df$POI_INDEX) {
temp_df <- subset(tripa_aspects_df, POI_INDEX == i)
text <- paste(unlist(as.list(temp_df$ASPECTS)), collapse = " ")
tripa_aspects_df_parsed <- rbind(tripa_aspects_df_parsed, c(i, text))
}
}
tripa_aspects_df_parsed <- tripa_aspects_df_parsed[2:468,]
View(aspects_df)
# Aspects from TripA
tripa_aspects_path <- "./tripadvisor/output/"
tripa_aspects_csvs <- list.files(path = tripa_aspects_path, include.dirs = TRUE)
tripa_aspects_df <- data.frame(matrix(nrow = 0, ncol = 3))
names(tripa_aspects_df) <- c("POI_INDEX", "ASPECTS", "ASPECTS_CRAWLED_TIME")
for (file_name in tripa_aspects_csvs) {
path <- paste0(tripa_aspects_path, file_name)
aspects_df <- read.csv(path, as.is = TRUE)
tripa_aspects_df <- rbind(tripa_aspects_df, aspects_df)
}
# Aspects from TripA
tripa_aspects_path <- "./tripadvisor/output/"
tripa_aspects_csvs <- list.files(path = tripa_aspects_path, include.dirs = TRUE)[1]
tripa_aspects_df <- data.frame(matrix(nrow = 0, ncol = 3))
names(tripa_aspects_df) <- c("POI_INDEX", "ASPECTS", "ASPECTS_CRAWLED_TIME")
for (file_name in tripa_aspects_csvs) {
path <- paste0(tripa_aspects_path, file_name)
aspects_df <- read.csv(path, as.is = TRUE)
tripa_aspects_df <- rbind(tripa_aspects_df, aspects_df)
}
tripa_aspects_df = tripa_aspects_df[, c(1,2)]
tripa_aspects_df_parsed <- tripa_aspects_df[1, c(1,2)]
for (i in 1:758) {
if (i %in% tripa_aspects_df$POI_INDEX) {
temp_df <- subset(tripa_aspects_df, POI_INDEX == i)
text <- paste(unlist(as.list(temp_df$ASPECTS)), collapse = " ")
tripa_aspects_df_parsed <- rbind(tripa_aspects_df_parsed, c(i, text))
}
}
tripa_aspects_df_parsed <- tripa_aspects_df_parsed[2:468,]
knitr::opts_knit$set(root.dir = "~/git/STB_social_media_analytics")
knitr::opts_chunk$set(root.dir = "~/git/STB_social_media_analytics", echo = TRUE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(textmineR)
# Aspects from TripA
tripa_aspects_path <- "./tripadvisor/output/"
tripa_aspects_csvs <- list.files(path = tripa_aspects_path, include.dirs = TRUE)[1]
tripa_aspects_df <- data.frame(matrix(nrow = 0, ncol = 3))
names(tripa_aspects_df) <- c("POI_INDEX", "ASPECTS", "ASPECTS_CRAWLED_TIME")
for (file_name in tripa_aspects_csvs) {
path <- paste0(tripa_aspects_path, file_name)
aspects_df <- read.csv(path, as.is = TRUE)
tripa_aspects_df <- rbind(tripa_aspects_df, aspects_df)
}
tripa_aspects_df = tripa_aspects_df[, c(1,2)]
tripa_aspects_df_parsed <- tripa_aspects_df[1, c(1,2)]
for (i in 1:758) {
if (i %in% tripa_aspects_df$POI_INDEX) {
temp_df <- subset(tripa_aspects_df, POI_INDEX == i)
text <- paste(unlist(as.list(temp_df$ASPECTS)), collapse = " ")
tripa_aspects_df_parsed <- rbind(tripa_aspects_df_parsed, c(i, text))
}
}
tripa_aspects_df_parsed <- tripa_aspects_df_parsed[2:468,]
# Create a document term matrix
dtm <- CreateDtm(tripa_aspects_df_parsed$ASPECTS,
doc_names = tripa_aspects_df_parsed$POI_INDEX,
ngram_window = c(1, 2))
dim(dtm)
tf <- TermDocFreq(dtm = dtm)
vocabulary <- tf$term[ tf$term_freq > 1 & tf$doc_freq < nrow(dtm) / 2 ]
dtm <- dtm[ , vocabulary]
dim(dtm)
# fit some LDA models and select the best number of topics
k_list <- seq(1, 50, by = 1)
model_dir <- paste0("./aspects/", "models_", digest::digest(vocabulary, algo = "sha1"))
if (!dir.exists(model_dir)) dir.create(model_dir)
model_list <- TmParallelApply(X = k_list, FUN = function(k){
filename = file.path(model_dir, paste0(k, "_topics.rda"))
if (!file.exists(filename)) {
m <- FitLdaModel(dtm = dtm, k = k, iterations = 500)
m$k <- k
m$coherence <- CalcProbCoherence(phi = m$phi, dtm = dtm, M = 5)
save(m, file = filename)
} else {
load(filename)
}
m
}
#, export=c("dtm", "model_dir") # export only needed for Windows machines
)
coherence_mat <- data.frame(k = sapply(model_list, function(x) nrow(x$phi)),
coherence = sapply(model_list, function(x) mean(x$coherence)),
stringsAsFactors = FALSE)
plot(coherence_mat, type = "o")
